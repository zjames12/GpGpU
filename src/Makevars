R_HOME ?= /home/zj37/.conda/envs/r_env/lib/R
CUDA_HOME ?= /home/zj37/.conda/envs/r_env
CXX ?= /usr/bin/g++

# You should not need to change anything below this line

PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS) 
PKG_LIBS += -L $(CUDA_HOME)/lib -Wl,-rpath, $(CUDA_HOME)/lib/libcudart.so

R_INC = $(R_HOME)/include
RCPP_ARMA_INC = $(R_HOME)/library/RcppArmadillo/include
RCPP_INC = $(R_HOME)/library/Rcpp/include
BH_INC =  $(R_HOME)/library/BH/include
NVCC = $(CUDA_HOME)/bin/nvcc
CUDA_INC = $(CUDA_HOME)/lib

LIBS = -lcudart -lcusolver
NVCC_FLAGS = -lcudart -lcusolver -m64 -I$(R_INC)

cu_sources := $(wildcard *.cu)
cu_sharedlibs := $(patsubst %.cu, %.o,$(cu_sources))

cpp_sources := $(wildcard *.cpp)
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)

all : GpGpU.so

GpGpU.so : $(OBJECTS)

%.o : %.cpp $(cpp_sources)
	$(CXX) $< -c -v -fPIC -I$(R_INC) -I$(RCPP_INC) -I$(RCPP_ARMA_INC) -I$(BH_INC)

onepass.o : onepass.cu
	$(NVCC) $(NVCC_FLAGS) -I$(CUDA_INC) $< -c -v -Xcompiler -fpic -I$(RCPP_INC) -I$(RCPP_ARMA_INC) -I$(BH_INC)